name: release-and-publish

on: 
  push:
    branches:
      - 'main'
    paths:
      - 'CHANGELOG.md'

jobs:
  create-release:
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
     
      - name: Check version is mentioned in Changelog.md
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_depth: 10
          path: './CHANGELOG.md'

      - name: Set up Go
        uses: actions/setup-go@v4
      
      - name: Set the draft version value and print other values.
        run: |
          echo "Version: ${{ steps.changelog_reader.outputs.version }}"
          echo "Changes: ${{ steps.changelog_reader.outputs.changes }}"
          echo "DRAFT_VERSION=${{ steps.changelog_reader.outputs.version }}" >> $GITHUB_ENV

      - name: Make Release Dir
        run: mkdir bin
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.18.2

      # Check if the newest tag already exists
      - name: Check if tag exist
        uses: mukunku/tag-exists-action@9afafd1bf326f2957ca13d67122d44d5681e432b
        id: check-tag-exists
        with: 
          tag:  "v${{ steps.changelog_reader.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 
      # Build Binaries if this is a new release
      - name: Build ACLI Release Binaries
        run: make build-all
        if: ${{ steps.check-tag-exists.outputs.exists == 'false' }}
        
      # If the tag already exists, don't upload release artifacts
      - name: Update ACLI Release Body
        if: ${{ steps.check-tag-exists.outputs.exists == 'true' }}
        uses: softprops/action-gh-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name : "v${{ steps.changelog_reader.outputs.version }}"
          name: "v${{ steps.changelog_reader.outputs.version }}"
          body: ${{ steps.changelog_reader.outputs.changes }}
          
      # Create Release with artifacts
      - name: Create ACLI Release
        if: ${{ steps.check-tag-exists.outputs.exists == 'false'}}
        uses: softprops/action-gh-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name : "v${{ steps.changelog_reader.outputs.version }}"
          name: "v${{ steps.changelog_reader.outputs.version }}"
          body: ${{ steps.changelog_reader.outputs.changes }}
          # token: ${{ github.token }}
          # generate_release_notes: true
          files: |
            ./bin/*
